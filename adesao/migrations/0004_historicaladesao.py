# Generated by Django 5.2.4 on 2025-08-21 18:34

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('adesao', '0003_alter_adesao_perdcomp_alter_adesao_saldo'),
        ('clientes_parceiros', '0003_historicalclientesparceiros'),
        ('correcao', '0004_historicaltipotese'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalAdesao',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('metodo_credito', models.CharField(blank=True, choices=[('Pedido de compensação', 'Pedido de compensação'), ('Pedido de restituição', 'Pedido de restituição'), ('Declaração de compensação', 'Declaração de compensação'), ('Declaração de compensação pagamento indevido', 'Declaração de compensação pagamento indevido')], max_length=50, null=True, verbose_name='Método de Crédito')),
                ('data_inicio', models.DateField(help_text='Data em que a adesão foi iniciada', verbose_name='Data de Início')),
                ('perdcomp', models.CharField(max_length=30, verbose_name='PERDCOMP')),
                ('saldo', models.FloatField(verbose_name='Valor do crédito ')),
                ('ano', models.CharField(blank=True, max_length=4, null=True, verbose_name='Ano')),
                ('trimestre', models.CharField(blank=True, choices=[('1', '1º Trimestre'), ('2', '2º Trimestre'), ('3', '3º Trimestre'), ('4', '4º Trimestre')], max_length=1, null=True, verbose_name='Trimestre')),
                ('periodo_apuracao_credito', models.CharField(blank=True, max_length=20, null=True, verbose_name='Período de Apuração Crédito')),
                ('periodo_apuracao_debito', models.CharField(blank=True, max_length=20, null=True, verbose_name='Periodo apuração débito')),
                ('tipo_credito', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tipo de Crédito')),
                ('codigo_receita', models.CharField(blank=True, max_length=20, null=True, verbose_name='Código da Receita')),
                ('codigo_receita_denominacao', models.CharField(blank=True, max_length=20, null=True, verbose_name='Código Receita / Denominação')),
                ('total', models.FloatField(blank=True, null=True, verbose_name='Total')),
                ('credito_original_utilizado', models.FloatField(blank=True, null=True, verbose_name='Crédito Original Utilizado')),
                ('valor_do_principal', models.FloatField(blank=True, null=True, verbose_name='Valor do Principal')),
                ('saldo_atual', models.FloatField(blank=True, help_text='Saldo atual da adesão, atualizado automaticamente pelos lançamentos', null=True, verbose_name='Saldo Atual')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clientes_parceiros.clientesparceiros')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tese_credito_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='correcao.tesecredito', verbose_name='Tese de Crédito')),
            ],
            options={
                'verbose_name': 'historical Adesão',
                'verbose_name_plural': 'historical Adesões',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
