services:
  web:
    build: .
    container_name: perdcomp_web
    environment:
      DJANGO_SECRET_KEY: dev-secret-change
      DJANGO_DEBUG: 'False'
      DJANGO_ALLOWED_HOSTS: '*'  # ajuste para seu dominio.com,IP
      DJANGO_SECURE_SSL_REDIRECT: 'False'
      DJANGO_CSRF_TRUSTED_ORIGINS: 'http://localhost,http://127.0.0.1,http://177.153.62.100'
      DJANGO_DB_ENGINE: postgres
      POSTGRES_DB: perdcomp
      POSTGRES_USER: perdcomp
      POSTGRES_PASSWORD: perdcomp
      POSTGRES_HOST: postgres
      POSTGRES_PORT: '5432'
    volumes:
      - media_data:/app/media
      - staticfiles_data:/app/staticfiles
    command: gunicorn perdcomp.wsgi:application --bind 0.0.0.0:8000 --workers 3
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: perdcomp_postgres
    environment:
      POSTGRES_DB: perdcomp
      POSTGRES_USER: perdcomp
      POSTGRES_PASSWORD: perdcomp
    volumes:
      - pg_data:/var/lib/postgresql/data
  # Remova o mapeamento de porta se n√£o precisar acessar o Postgres de fora
  # ports:
  #   - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    container_name: perdcomp_nginx
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/app.conf:/etc/nginx/conf.d/app.conf:ro
      - staticfiles_data:/staticfiles:ro
      - media_data:/media:ro
    restart: unless-stopped

volumes:
  media_data:
  staticfiles_data:
  pg_data:
